{"version":3,"sources":["actions/types.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","components/Footer.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","pages/HomePage.js","pages/ProductPage.js","actions/cartActions.js","pages/CartScreen.js","components/FormContainer.js","pages/LoginPage.js","pages/RegisterPage.js","pages/ProfilePage.js","actions/orderActions.js","components/CheckoutSteps.js","pages/ShippingPage.js","pages/PaymentPage.js","pages/PlaceOrderPage.js","pages/OrderPage.js","pages/UserListPage.js","pages/UserEditPage.js","pages/ProductListPage.js","pages/ProductEditPage.js","pages/OrderListPage.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","PRODUCT_DETAIL_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetail","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orders","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","console","log","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Rating","text","color","renderedStars","i","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","detailProduct","productId","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomePage","match","params","sm","md","lg","xl","ProductPage","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginPage","email","setEmail","password","setPassword","redirect","login","RegisterPage","setName","passwordConfirm","setPasswordConfirm","setMessage","register","ProfilePage","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingPage","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentPage","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderPage","itemsPrice","shippingPrice","taxPrice","index","cartitems","createOrder","OrderPage","sdkReady","setSdkReady","orderId","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListPage","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditPage","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListPage","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditPage","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListPage","App","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8f54302a.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAIL_REQUEST = \"PRODUCT_DETAIL_REQUEST\";\r\nexport const PRODUCT_DETAIL_SUCCESS = \"PRODUCT_DETAIL_SUCCESS\";\r\nexport const PRODUCT_DETAIL_FAIL = \"PRODUCT_DETAIL_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\r\n\r\nexport const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n\r\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n    productListReducer,\r\n    productDetailReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productCreateReviewReducer,\r\n    productTopRatedReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n    userDetailsReducer,\r\n    userListReducer,\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userUpdateProfileReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n    orderCreateReducer,\r\n    orderDeliverReducer,\r\n    orderDetailsReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderPayReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetail: productDetailReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productCreateReview: productCreateReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    cart: cartReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n    : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n    ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n    : {};\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAIL_FAIL,\r\n    PRODUCT_DETAIL_REQUEST,\r\n    PRODUCT_DETAIL_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAIL_REQUEST:\r\n            return { ...state, loading: true };\r\n        case PRODUCT_DETAIL_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAIL_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from \"../actions/types\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { users: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../actions/types\";\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(\r\n                (x) => x.product === item.product\r\n            );\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(\r\n                    (x) => x.product !== action.payload\r\n                ),\r\n            };\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            };\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_SUCCESS,\r\n} from \"../actions/types.js\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload };\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload };\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload };\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload };\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case ORDER_DELIVER_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; Proshop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport {\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_RESET,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users/login\",\r\n            {\r\n                email,\r\n                password,\r\n            },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n    dispatch({ type: ORDER_LIST_MY_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users\",\r\n            {\r\n                name,\r\n                email,\r\n                password,\r\n            },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        console.log(userInfo);\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users`, config);\r\n\r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/users/${id}`, config);\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/${user._id}`,\r\n            user,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS });\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nfunction SearchBox({ history }) {\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"q\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder=\"Search products...\"\r\n                className=\"mr-sm-2 ml-sm-5\"\r\n            ></Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>Proshop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route\r\n                            render={({ history }) => (\r\n                                <SearchBox history={history} />\r\n                            )}\r\n                        />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-shopping-cart\"></i>Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown\r\n                                    title={userInfo.name}\r\n                                    id=\"username\"\r\n                                >\r\n                                    <LinkContainer to=\"/profile\">\r\n                                        <NavDropdown.Item>\r\n                                            Profile\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link>\r\n                                        <i className=\"fas fa-user\"></i> Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                                    <LinkContainer to=\"/admin/userlist\">\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/productlist\">\r\n                                        <NavDropdown.Item>\r\n                                            Products\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/orderlist\">\r\n                                        <NavDropdown.Item>\r\n                                            Orders\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Rating({ value, text, color }) {\r\n    const renderedStars = [1, 2, 3, 4, 5].map((i) => {\r\n        return (\r\n            <span key={i}>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= i\r\n                            ? \"fas fa-star\"\r\n                            : value >= i - 0.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                    }\r\n                />\r\n            </span>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"rating\">\r\n            {renderedStars}\r\n            <span>{text && text}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: \"#f8e825\",\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating\r\n                            value={product.rating}\r\n                            text={`${product.numReviews} reviews`}\r\n                        />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import axios from \"axios\";\r\nimport {\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAIL_FAIL,\r\n    PRODUCT_DETAIL_REQUEST,\r\n    PRODUCT_DETAIL_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(\r\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n        );\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const detailProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAIL_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${productId}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAIL_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAIL_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, children }) {\r\n    return <Alert variant={variant}>{children}</Alert>;\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nfunction Paginate({ pages, page, isAdmin = false, keyword = \"\" }) {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${x + 1}`\r\n                                    : `/page/${x + 1}`\r\n                                : `/admin/productlist/${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>\r\n                            {x + 1}\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch();\r\n    const productTopRated = useSelector((state) => state.productTopRated);\r\n    const { loading, products, error } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts());\r\n    }, []);\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <Carousel pause=\"hover\" className=\"bg-dark\">\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className=\"carousel-caption\">\r\n                            <h2>\r\n                                {product.name} (${product.price})\r\n                            </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default ProductCarousel;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction Meta({ title, description, keywords }) {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"keywords\" content={keywords} />\r\n        </Helmet>\r\n    );\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: \"Welcome to ProShop\",\r\n    keywords: \"electronics, cheap electronics, buy electronics\",\r\n    description: \"We sell the best products for cheap\",\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nfunction HomePage({ match }) {\r\n    const keyword = match.params.keyword;\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (\r\n                <ProductCarousel />\r\n            ) : (\r\n                <Link to=\"/\" className=\"btn btn-light\">\r\n                    Go Back\r\n                </Link>\r\n            )}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate\r\n                        pages={pages}\r\n                        page={page}\r\n                        keyword={keyword ? keyword : \"\"}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Form,\r\n    Image,\r\n    ListGroup,\r\n    Row,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { detailProduct, createProductReview } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../actions/types\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nfunction ProductPage({ history, match }) {\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetail = useSelector((state) => state.productDetail);\r\n    const { product, error, loading } = productDetail;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productCreateReview = useSelector(\r\n        (state) => state.productCreateReview\r\n    );\r\n    const {\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productCreateReview;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert(\"Review Submitted!\");\r\n            setRating(0);\r\n            setComment(\"\");\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        }\r\n        dispatch(detailProduct(match.params.id));\r\n    }, [match, dispatch, successProductReview]);\r\n\r\n    const addToCarthandler = (e) => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createProductReview(match.params.id, { rating, comment }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-light my-3\" to=\"/\">\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image\r\n                                src={product.image}\r\n                                alt={product.name}\r\n                                fluid\r\n                            />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h2>{product.name}</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews}`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>\r\n                                                    ${product.price}\r\n                                                </strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0\r\n                                                    ? \"In Stock\"\r\n                                                    : \"Out of Stock\"}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        value={qty}\r\n                                                        onChange={(e) =>\r\n                                                            setQty(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {[\r\n                                                            ...Array(\r\n                                                                product.countInStock\r\n                                                            ).keys(),\r\n                                                        ].map((x) => (\r\n                                                            <option\r\n                                                                key={x + 1}\r\n                                                                value={x + 1}\r\n                                                            >\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCarthandler}\r\n                                            className=\"btn-block\"\r\n                                            type=\"button\"\r\n                                            disabled={!product.countInStock > 0}\r\n                                        >\r\n                                            Add To Card\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && (\r\n                                <Message>No Reviews</Message>\r\n                            )}\r\n                            <ListGroup variant=\"flush\">\r\n                                {product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating}></Rating>\r\n                                        <p>\r\n                                            {review.createdAt.substring(0, 10)}\r\n                                        </p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && (\r\n                                        <Message variant=\"danger\">\r\n                                            {errorProductReview}\r\n                                        </Message>\r\n                                    )}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId=\"rating\">\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    value={rating}\r\n                                                    onChange={(e) =>\r\n                                                        setRating(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <option value=\"\">\r\n                                                        Select...\r\n                                                    </option>\r\n                                                    <option value=\"1\">\r\n                                                        1 - Poor\r\n                                                    </option>\r\n                                                    <option value=\"2\">\r\n                                                        2 - Fair\r\n                                                    </option>\r\n                                                    <option value=\"3\">\r\n                                                        3 - Good\r\n                                                    </option>\r\n                                                    <option value=\"4\">\r\n                                                        4 - Very Good\r\n                                                    </option>\r\n                                                    <option value=\"5\">\r\n                                                        5 - Excellent\r\n                                                    </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"comment\">\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"textarea\"\r\n                                                    row=\"3\"\r\n                                                    onChange={(e) =>\r\n                                                        setComment(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"primary\"\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            Please{\" \"}\r\n                                            <Link to=\"/login\">Log In</Link> To\r\n                                            Write a Review\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductPage;\r\n","import axios from \"axios\";\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"./types\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    });\r\n\r\n    localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    });\r\n\r\n    localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (paymentMethod) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod,\r\n    });\r\n\r\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(paymentMethod));\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Image,\r\n    Form,\r\n    Button,\r\n    Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id;\r\n\r\n    const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        } else {\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push(\"/login?redirect=shipping\");\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your cart is empty <Link to=\"/\">Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image\r\n                                            src={item.image}\r\n                                            alt={item.name}\r\n                                            fluid\r\n                                            rounded\r\n                                        ></Image>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) =>\r\n                                                dispatch(\r\n                                                    addToCart(\r\n                                                        item.product,\r\n                                                        Number(e.target.value)\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {[\r\n                                                ...Array(\r\n                                                    item.countInStock\r\n                                                ).keys(),\r\n                                            ].map((x) => (\r\n                                                <option\r\n                                                    key={x + 1}\r\n                                                    value={x + 1}\r\n                                                >\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"light\"\r\n                                            onClick={() =>\r\n                                                removeFromCartHandler(\r\n                                                    item.product\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal (\r\n                                {cartItems.reduce(\r\n                                    (acc, item) => acc + item.qty,\r\n                                    0\r\n                                )}\r\n                                ) items\r\n                            </h2>\r\n                            $\r\n                            {cartItems\r\n                                .reduce(\r\n                                    (acc, item) => acc + item.qty * item.price,\r\n                                    0\r\n                                )\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"btn-block\"\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction LoginPage({ location, history }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [userInfo, redirect, history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer?{\" \"}\r\n                    <Link\r\n                        to={\r\n                            redirect\r\n                                ? `/register?redirect=${redirect}`\r\n                                : \"/register\"\r\n                        }\r\n                    >\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { register } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction RegisterPage({ location, history }) {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [userInfo, redirect, history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== passwordConfirm) {\r\n            setMessage(\"Passwords do not match\");\r\n        } else {\r\n            setMessage(null);\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Enter name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"passwordConfirm\">\r\n                    <Form.Label>Password Confirm</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm password\"\r\n                        value={passwordConfirm}\r\n                        onChange={(e) => setPasswordConfirm(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an Account?\r\n                    <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n                    >\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction ProfilePage({ location, history }) {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy);\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails(\"profile\"));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [userInfo, history, dispatch, user]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== passwordConfirm) {\r\n            setMessage(\"Passwords do not match\");\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, password }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {success && (\r\n                    <Message variant=\"success\">Profile Updated</Message>\r\n                )}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            placeholder=\"Enter name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password </Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"passwordConfirm\">\r\n                        <Form.Label>Password Confirm</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm password\"\r\n                            value={passwordConfirm}\r\n                            onChange={(e) => setPasswordConfirm(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant=\"danger\">{errorOrders}</Message>\r\n                ) : (\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className=\"table-sm\"\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className=\"fas fa-times\"\r\n                                                style={{ color: \"red\" }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className=\"fas fa-times\"\r\n                                                style={{ color: \"red\" }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/order/${order._id}`}\r\n                                        >\r\n                                            <Button\r\n                                                className=\"btn-sm\"\r\n                                                variant=\"light\"\r\n                                            >\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import axios from \"axios\";\r\nimport {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n        dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders`, config);\r\n\r\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        );\r\n\r\n        dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nfunction ShippingPage({ history }) {\r\n    const cart = useSelector((state) => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n        history.push(\"/payment\");\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Address\"\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter City\"\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Postal Code\"\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Country\"\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default ShippingPage;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nfunction PaymentPage({ history }) {\r\n    const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push(\"/placeorder\");\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>\r\n\r\n                    <Col>\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"PayPal or Credit Card\"\r\n                            id=\"PayPal\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"PayPal\"\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default PaymentPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nfunction PlaceOrderPage({ history }) {\r\n    const cart = useSelector((state) => state.cart);\r\n\r\n    cart.itemsPrice = cart.cartItems\r\n        .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        .toFixed(2);\r\n\r\n    cart.shippingPrice =\r\n        cart.itemsPrice > 100 ? Number(0).toFixed(2) : Number(100).toFixed(2);\r\n\r\n    cart.taxPrice = Number(0.15 * cart.itemsPrice).toFixed(2);\r\n\r\n    cart.totalPrice = Number(\r\n        Number(cart.itemsPrice) +\r\n            Number(cart.shippingPrice) +\r\n            Number(cart.taxPrice)\r\n    ).toFixed(2);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n    const { order, success, error } = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [success, history]);\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address},\r\n                                {cart.shippingAddress.city},\r\n                                {cart.shippingAddress.postalCode},\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method:</strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    ></Image>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {error && (\r\n                                <ListGroup.Item>\r\n                                    <Message variant=\"danger\">{error}</Message>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    className=\"btn-block\"\r\n                                    disabled={cart.cartitems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n    deliverOrder,\r\n    getOrderDetails,\r\n    payOrder,\r\n} from \"../actions/orderActions\";\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from \"../actions/types\";\r\n\r\nfunction OrderPage({ match, history }) {\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const orderId = match.params.id;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    if (!loading) {\r\n        order.itemsPrice = Number(\r\n            order.orderItems.reduce(\r\n                (acc, item) => acc + item.price * item.qty,\r\n                0\r\n            )\r\n        ).toFixed(2);\r\n    }\r\n    useEffect(() => {\r\n        if (\r\n            !userInfo ||\r\n            (order && userInfo._id !== order.user._id && !userInfo.isAdmin)\r\n        ) {\r\n            history.push(\"/login\");\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n\r\n            const script = document.createElement(\"script\");\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => setSdkReady(true);\r\n            document.body.appendChild(script);\r\n        };\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [dispatch, orderId, order, successPay, successDeliver]);\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order));\r\n    };\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order.id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <strong>Name: </strong>\r\n                            <p>{order.user.name}</p>\r\n                            <strong>Email: </strong>\r\n                            <p>\r\n                                <a href={`mailto:${order.user.email}`}>\r\n                                    {order.user.email}\r\n                                </a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address},\r\n                                {order.shippingAddress.city},\r\n                                {order.shippingAddress.postalCode},\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant=\"success\">\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">\r\n                                    Not Delivered\r\n                                </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant=\"success\">\r\n                                    Paid on {order.paidAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Your order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    ></Image>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-block\"\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { deleteUser, listUsers } from \"../actions/userActions\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction UserListPage({ history }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector((state) => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector((state) => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>\r\n                                    <a href={`mailto:${user.email}`}>\r\n                                        {user.email}\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i\r\n                                            className=\"fas fa-check\"\r\n                                            style={{ color: \"green\" }}\r\n                                        />\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: \"red\" }}\r\n                                        />\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer\r\n                                        to={`/admin/user/${user._id}/edit`}\r\n                                    >\r\n                                        <Button\r\n                                            variant=\"light\"\r\n                                            className=\"btn-sm\"\r\n                                        >\r\n                                            <i className=\"fas fa-edit\" />\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button\r\n                                        variant=\"danger\"\r\n                                        className=\"btn-sm\"\r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className=\"fas fa-trash\" />\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserListPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport { USER_UPDATE_RESET } from \"../actions/types\";\r\n\r\nfunction UserEditPage({ match, history }) {\r\n    const userId = match.params.id;\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push(\"/admin/userlist\");\r\n        } else {\r\n            if (!user || user._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && (\r\n                    <Message variant=\"danger\">{errorUpdate}</Message>\r\n                )}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader />}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"isadmin\">\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Is Admin\"\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserEditPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n    createProduct,\r\n    deleteProduct,\r\n    listProducts,\r\n} from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport { PRODUCT_CREATE_RESET } from \"../actions/types\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\nfunction ProductListPage({ history, match }) {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = productDelete;\r\n\r\n    const productCreate = useSelector((state) => state.productCreate);\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct,\r\n    } = productCreate;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push(\"/login\");\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`);\r\n        } else {\r\n            dispatch(listProducts(\"\", pageNumber));\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        createdProduct,\r\n        pageNumber,\r\n    ]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct());\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>PRoducts</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={createProductHandler}>\r\n                        <i className=\"fas fa-plus\" />\r\n                        Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className=\"table-sm\"\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/admin/product/${product._id}/edit`}\r\n                                        >\r\n                                            <Button\r\n                                                variant=\"light\"\r\n                                                className=\"btn-sm\"\r\n                                            >\r\n                                                <i className=\"fas fa-edit\" />\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            className=\"btn-sm\"\r\n                                            onClick={() =>\r\n                                                deleteHandler(product._id)\r\n                                            }\r\n                                        >\r\n                                            <i className=\"fas fa-trash\" />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductListPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport { detailProduct, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../actions/types\";\r\n\r\nfunction ProductEditPage({ match, history }) {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState(\"\");\r\n    const [brand, setBrand] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetail = useSelector((state) => state.productDetail);\r\n    const { loading, error, product } = productDetail;\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push(\"/admin/productlist\");\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(detailProduct(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [product, dispatch, productId, history, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        );\r\n    };\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\"/api/upload\", formData, config);\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {errorUpdate && (\r\n                    <Message variant=\"danger\">{errorUpdate}</Message>\r\n                )}\r\n                {loadingUpdate && <Loader />}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader />}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"price\">\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter price\"\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"image\">\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Image\"\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id=\"image-file\"\r\n                                label=\"Choose File\"\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"brand\">\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Brand\"\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"countInStock\">\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Enter Count In Stock\"\r\n                                value={countInStock}\r\n                                onChange={(e) =>\r\n                                    setCountInStock(e.target.value)\r\n                                }\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"category\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Category\"\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"description\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Description\"\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductEditPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction OrderListPage({ history }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector((state) => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n        }\r\n    };\r\n    console.log(orders);\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: \"red\" }}\r\n                                        />\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: \"red\" }}\r\n                                        />\r\n                                    )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button\r\n                                            variant=\"light\"\r\n                                            className=\"btn-sm\"\r\n                                        >\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderListPage;\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { Container } from \"react-bootstrap\";\nimport HomePage from \"./pages/HomePage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport CartScreen from \"./pages/CartScreen\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport ShippingPage from \"./pages/ShippingPage\";\nimport PaymentPage from \"./pages/PaymentPage\";\nimport PlaceOrderPage from \"./pages/PlaceOrderPage\";\nimport OrderPage from \"./pages/OrderPage\";\nimport UserListPage from \"./pages/UserListPage\";\nimport UserEditPage from \"./pages/UserEditPage\";\nimport ProductListPage from \"./pages/ProductListPage\";\nimport ProductEditPage from \"./pages/ProductEditPage\";\nimport OrderListPage from \"./pages/OrderListPage\";\n\nfunction App() {\n    return (\n        <Router>\n            <Header />\n            <main className=\"py-3\">\n                <Container>\n                    <Route path=\"/login\" component={LoginPage} />\n                    <Route path=\"/register\" component={RegisterPage} />\n                    <Route path=\"/profile\" component={ProfilePage} />\n                    <Route path=\"/shipping\" component={ShippingPage} />\n                    <Route path=\"/payment\" component={PaymentPage} />\n                    <Route path=\"/placeorder\" component={PlaceOrderPage} />\n                    <Route path=\"/order/:id\" component={OrderPage} />\n                    <Route path=\"/product/:id\" component={ProductPage} />\n                    <Route path=\"/cart/:id?\" component={CartScreen} />\n                    <Route path=\"/admin/userlist\" component={UserListPage} />\n                    <Route\n                        path=\"/admin/user/:id/edit\"\n                        component={UserEditPage}\n                    />\n                    <Route\n                        path=\"/admin/productlist\"\n                        component={ProductListPage}\n                        exact\n                    />\n                    <Route\n                        path=\"/admin/productlist/:pageNumber\"\n                        component={ProductListPage}\n                    />\n                    <Route\n                        path=\"/admin/product/:id/edit\"\n                        component={ProductEditPage}\n                    />\n                    <Route path=\"/admin/orderlist\" component={OrderListPage} />\n                    <Route path=\"/search/:keyword\" component={HomePage} exact />\n                    <Route\n                        path=\"/search/:keyword/page/:pageNumber\"\n                        component={HomePage}\n                        exact\n                    />\n                    <Route\n                        path=\"/page/:pageNumber\"\n                        component={HomePage}\n                        exact\n                    />\n                    <Route path=\"/\" component={HomePage} exact />\n                </Container>\n            </main>\n            <Footer />\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}